# Multi-stage Cloud Build pipeline for roadtrip.ai
# This pipeline builds, tests, and deploys the entire application
# with separate dev and prod environments

steps:
  # ========================================
  # STAGE 1: BUILD AND TEST BACKEND
  # ========================================
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-backend'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/roadtrip-ai-backend:$COMMIT_SHA',
      '-t', 'gcr.io/$PROJECT_ID/roadtrip-ai-backend:latest',
      '-f', 'backend/Dockerfile',
      '--build-arg', 'BUILDKIT_INLINE_CACHE=1',
      'backend/'
    ]
    waitFor: ['-']  # Start immediately

  # Test backend with H2 database
  - name: 'eclipse-temurin:21-jdk'
    id: 'test-backend'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        cd backend
        ./gradlew test --no-daemon
    waitFor: ['build-backend']

  # ========================================
  # STAGE 2: TEST FRONTEND (Jest)
  # ========================================
  - name: 'node:20-alpine'
    id: 'test-frontend'
    entrypoint: 'sh'
    args:
      - -c
      - |
        cd frontend
        npm ci
        npm run test -- --ci --passWithNoTests
    waitFor: ['test-backend']

  # ========================================
  # STAGE 3: BUILD FRONTEND
  # ========================================
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-frontend'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/roadtrip-ai-frontend:$COMMIT_SHA',
      '-t', 'gcr.io/$PROJECT_ID/roadtrip-ai-frontend:latest',
      '-f', 'frontend/Dockerfile',
      '--build-arg', 'BUILDKIT_INLINE_CACHE=1',
      'frontend/'
    ]
    waitFor: ['test-frontend']

  # ========================================
  # STAGE 4: PUSH IMAGES TO REGISTRY
  # ========================================
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-backend'
    args: ['push', 'gcr.io/$PROJECT_ID/roadtrip-ai-backend:$COMMIT_SHA']
    waitFor: ['build-backend']

  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-frontend'
    args: ['push', 'gcr.io/$PROJECT_ID/roadtrip-ai-frontend:$COMMIT_SHA']
    waitFor: ['build-frontend']

  # ========================================
  # STAGE 5: DEPLOY TO DEV ENVIRONMENT
  # ========================================
  # Deploy backend to dev with H2 database
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-backend-dev'
    entrypoint: 'gcloud'
    args: [
      'run', 'deploy', 'roadtrip-ai-backend-dev',
      '--image', 'gcr.io/$PROJECT_ID/roadtrip-ai-backend:$COMMIT_SHA',
      '--platform', 'managed',
      '--region', 'australia-southeast1',
      '--allow-unauthenticated',
      '--port', '8080',
      '--memory', '2Gi',
      '--cpu', '2',
      '--timeout', '600',
      '--max-instances', '5',
      '--set-env-vars', 'SPRING_PROFILES_ACTIVE=dev',
      '--set-env-vars', 'DATABASE_URL=jdbc:h2:mem:testdb',
      '--set-env-vars', 'DATABASE_USERNAME=sa',
      '--set-env-vars', 'DATABASE_PASSWORD=',
      '--set-env-vars', 'LOG_LEVEL=DEBUG',
      '--set-secrets', 'JWT_SECRET=jwt-secret:latest',
      '--set-secrets', 'OPENAI_API_KEY=openai-api-key:latest'
    ]
    waitFor: ['push-backend']

  # Wait for backend to be ready
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'wait-backend-dev'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        backend_url_local=$(gcloud run services describe roadtrip-ai-backend-dev --region=australia-southeast1 --format='value(status.url)')
        echo "Waiting for backend to be ready at $backend_url_local"
        for i in {1..30}; do
          if curl -f "$backend_url_local/actuator/health" > /dev/null 2>&1; then
            echo "Backend is ready!"
            break
          fi
          echo "Attempt $i: Backend not ready yet, waiting..."
          sleep 10
        done
    waitFor: ['deploy-backend-dev']

  # Deploy frontend to dev
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-frontend-dev'
    entrypoint: 'gcloud'
    args: [
      'run', 'deploy', 'roadtrip-ai-frontend-dev',
      '--image', 'gcr.io/$PROJECT_ID/roadtrip-ai-frontend:$COMMIT_SHA',
      '--platform', 'managed',
      '--region', 'australia-southeast1',
      '--allow-unauthenticated',
      '--port', '80',
      '--memory', '512Mi',
      '--cpu', '1',
      '--max-instances', '3',
      '--set-env-vars', 'VITE_APP_ENV=development'
    ]
    waitFor: ['wait-backend-dev']

  # Get dev backend URL and set it for frontend
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'update-frontend-dev-url'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        backend_url_local=$(gcloud run services describe roadtrip-ai-backend-dev --region=australia-southeast1 --format='value(status.url)')
        gcloud run services update roadtrip-ai-frontend-dev \
          --region=australia-southeast1 \
          --set-env-vars="VITE_API_BASE_URL=$backend_url_local"
    waitFor: ['deploy-frontend-dev']

  # ========================================
  # STAGE 6: DEV ENVIRONMENT TESTS
  # ========================================
  # Run integration tests against dev environment
  - name: 'curlimages/curl'
    id: 'test-dev-environment'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        frontend_url_local=$(gcloud run services describe roadtrip-ai-frontend-dev --region=australia-southeast1 --format='value(status.url)')
        backend_url_local=$(gcloud run services describe roadtrip-ai-backend-dev --region=australia-southeast1 --format='value(status.url)')
        
        echo "Testing dev environment..."
        echo "Frontend URL: $frontend_url_local"
        echo "Backend URL: $backend_url_local"
        
        # Test backend health
        curl -f "$backend_url_local/actuator/health" || exit 1
        
        # Test frontend loads
        curl -f "$frontend_url_local" || exit 1
        
        echo "Dev environment tests passed!"
    waitFor: ['update-frontend-dev-url']

  # ========================================
  # STAGE 7: DEPLOY TO PROD (if dev tests pass)
  # ========================================
  # Deploy backend to prod with PostgreSQL
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-backend-prod'
    entrypoint: 'gcloud'
    args: [
      'run', 'deploy', 'roadtrip-ai-backend',
      '--image', 'gcr.io/$PROJECT_ID/roadtrip-ai-backend:$COMMIT_SHA',
      '--platform', 'managed',
      '--region', 'australia-southeast1',
      '--allow-unauthenticated',
      '--port', '8080',
      '--memory', '2Gi',
      '--cpu', '2',
      '--timeout', '600',
      '--max-instances', '10',
      '--set-env-vars', 'SPRING_PROFILES_ACTIVE=prod',
      '--set-env-vars', 'LOG_LEVEL=INFO',
      '--set-secrets', 'DATABASE_URL=db-url:latest',
      '--set-secrets', 'DATABASE_USERNAME=db-username:latest',
      '--set-secrets', 'DATABASE_PASSWORD=db-password:latest',
      '--set-secrets', 'JWT_SECRET=jwt-secret:latest',
      '--set-secrets', 'OPENAI_API_KEY=openai-api-key:latest'
    ]
    waitFor: ['test-dev-environment']

  # Wait for prod backend to be ready
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'wait-backend-prod'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        backend_url_local=$(gcloud run services describe roadtrip-ai-backend --region=australia-southeast1 --format='value(status.url)')
        echo "Waiting for prod backend to be ready at $backend_url_local"
        for i in {1..30}; do
          if curl -f "$backend_url_local/actuator/health" > /dev/null 2>&1; then
            echo "Prod backend is ready!"
            break
          fi
          echo "Attempt $i: Prod backend not ready yet, waiting..."
          sleep 10
        done
    waitFor: ['deploy-backend-prod']

  # Deploy frontend to prod
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-frontend-prod'
    entrypoint: 'gcloud'
    args: [
      'run', 'deploy', 'roadtrip-ai-frontend',
      '--image', 'gcr.io/$PROJECT_ID/roadtrip-ai-frontend:$COMMIT_SHA',
      '--platform', 'managed',
      '--region', 'australia-southeast1',
      '--allow-unauthenticated',
      '--port', '80',
      '--memory', '512Mi',
      '--cpu', '1',
      '--max-instances', '5',
      '--set-env-vars', 'VITE_APP_ENV=production'
    ]
    waitFor: ['wait-backend-prod']

  # Get prod backend URL and set it for frontend
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'update-frontend-prod-url'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        backend_url_local=$(gcloud run services describe roadtrip-ai-backend --region=australia-southeast1 --format='value(status.url)')
        gcloud run services update roadtrip-ai-frontend \
          --region=australia-southeast1 \
          --set-env-vars="VITE_API_BASE_URL=$backend_url_local"
    waitFor: ['deploy-frontend-prod']

  # ========================================
  # STAGE 8: FINAL PROD TESTS
  # ========================================
  - name: 'curlimages/curl'
    id: 'test-prod-environment'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        frontend_url_local=$(gcloud run services describe roadtrip-ai-frontend --region=australia-southeast1 --format='value(status.url)')
        backend_url_local=$(gcloud run services describe roadtrip-ai-backend --region=australia-southeast1 --format='value(status.url)')
        
        echo "Testing prod environment..."
        echo "Frontend URL: $frontend_url_local"
        echo "Backend URL: $backend_url_local"
        
        # Test backend health
        curl -f "$backend_url_local/actuator/health" || exit 1
        
        # Test frontend loads
        curl -f "$frontend_url_local" || exit 1
        
        echo "Prod environment tests passed!"
        echo "Deployment successful!"
    waitFor: ['update-frontend-prod-url']

# Build timeout
timeout: '1800s'

# Options
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8' 